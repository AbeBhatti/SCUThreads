{"ast":null,"code":"var _jsxFileName = \"/Users/abrahambhatti/Desktop/SCUThreads/frontend/src/CheckoutButton.js\";\nimport React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutButton({\n  item,\n  amount\n}) {\n  const handleCheckout = async () => {\n    try {\n      // Call backend to create session\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/create-checkout-session`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          item,\n          amount\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        console.error(\"Stripe checkout error:\", data.error);\n        alert(\"Checkout error: \" + data.error);\n        return;\n      }\n      if (!data.id || !data.publishableKey) {\n        console.error(\"Missing session ID or publishable key\", data);\n        alert(\"Checkout session not created properly.\");\n        return;\n      }\n\n      // Initialize Stripe\n      const stripe = await loadStripe(data.publishableKey);\n      if (!stripe) {\n        console.error(\"Failed to load Stripe.js\");\n        alert(\"Stripe failed to load.\");\n        return;\n      }\n\n      // Redirect to checkout\n      const {\n        error\n      } = await stripe.redirectToCheckout({\n        sessionId: data.id\n      });\n      if (error) {\n        console.error(\"Stripe redirect error:\", error.message);\n        alert(\"Stripe redirect error: \" + error.message);\n      }\n    } catch (err) {\n      console.error(\"Checkout fetch error:\", err);\n      alert(\"Checkout request failed: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button\",\n    onClick: handleCheckout,\n    children: \"Buy Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n}\n_c = CheckoutButton;\nvar _c;\n$RefreshReg$(_c, \"CheckoutButton\");","map":{"version":3,"names":["React","loadStripe","jsxDEV","_jsxDEV","CheckoutButton","item","amount","handleCheckout","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","data","json","error","console","alert","id","publishableKey","stripe","redirectToCheckout","sessionId","message","err","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abrahambhatti/Desktop/SCUThreads/frontend/src/CheckoutButton.js"],"sourcesContent":["import React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nexport default function CheckoutButton({ item, amount }) {\n  const handleCheckout = async () => {\n    try {\n      // Call backend to create session\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/create-checkout-session`,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ item, amount }),\n        }\n      );\n\n      const data = await response.json();\n\n      if (data.error) {\n        console.error(\"Stripe checkout error:\", data.error);\n        alert(\"Checkout error: \" + data.error);\n        return;\n      }\n\n      if (!data.id || !data.publishableKey) {\n        console.error(\"Missing session ID or publishable key\", data);\n        alert(\"Checkout session not created properly.\");\n        return;\n      }\n\n      // Initialize Stripe\n      const stripe = await loadStripe(data.publishableKey);\n\n      if (!stripe) {\n        console.error(\"Failed to load Stripe.js\");\n        alert(\"Stripe failed to load.\");\n        return;\n      }\n\n      // Redirect to checkout\n      const { error } = await stripe.redirectToCheckout({ sessionId: data.id });\n      if (error) {\n        console.error(\"Stripe redirect error:\", error.message);\n        alert(\"Stripe redirect error: \" + error.message);\n      }\n    } catch (err) {\n      console.error(\"Checkout fetch error:\", err);\n      alert(\"Checkout request failed: \" + err.message);\n    }\n  };\n\n  return <button className=\"button\" onClick={handleCheckout}>Buy Now</button>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,EAAE;EACvD,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,0BAA0B,EAC9D;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,IAAI;UAAEC;QAAO,CAAC;MACvC,CACF,CAAC;MAED,MAAMY,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEF,IAAI,CAACE,KAAK,CAAC;QACnDE,KAAK,CAAC,kBAAkB,GAAGJ,IAAI,CAACE,KAAK,CAAC;QACtC;MACF;MAEA,IAAI,CAACF,IAAI,CAACK,EAAE,IAAI,CAACL,IAAI,CAACM,cAAc,EAAE;QACpCH,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEF,IAAI,CAAC;QAC5DI,KAAK,CAAC,wCAAwC,CAAC;QAC/C;MACF;;MAEA;MACA,MAAMG,MAAM,GAAG,MAAMxB,UAAU,CAACiB,IAAI,CAACM,cAAc,CAAC;MAEpD,IAAI,CAACC,MAAM,EAAE;QACXJ,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAC;QACzCE,KAAK,CAAC,wBAAwB,CAAC;QAC/B;MACF;;MAEA;MACA,MAAM;QAAEF;MAAM,CAAC,GAAG,MAAMK,MAAM,CAACC,kBAAkB,CAAC;QAAEC,SAAS,EAAET,IAAI,CAACK;MAAG,CAAC,CAAC;MACzE,IAAIH,KAAK,EAAE;QACTC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACQ,OAAO,CAAC;QACtDN,KAAK,CAAC,yBAAyB,GAAGF,KAAK,CAACQ,OAAO,CAAC;MAClD;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZR,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAES,GAAG,CAAC;MAC3CP,KAAK,CAAC,2BAA2B,GAAGO,GAAG,CAACD,OAAO,CAAC;IAClD;EACF,CAAC;EAED,oBAAOzB,OAAA;IAAQ2B,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAExB,cAAe;IAAAyB,QAAA,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC7E;AAACC,EAAA,GAjDuBjC,cAAc;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}