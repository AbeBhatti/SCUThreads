{"ast":null,"code":"var _jsxFileName = \"/Users/abrahambhatti/Desktop/SCUThreads/frontend/src/CheckoutButton.js\";\nimport React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutButton({\n  item,\n  amount,\n  size,\n  quantity,\n  seller\n}) {\n  const handleClick = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/create-checkout-session\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          item,\n          amount,\n          size,\n          quantity,\n          seller\n        })\n      });\n      const session = await response.json();\n      if (session.error) {\n        alert(\"Error creating checkout session: \" + session.error);\n        return;\n      }\n      const stripe = await loadStripe(session.publishableKey);\n      await stripe.redirectToCheckout({\n        sessionId: session.id\n      });\n    } catch (err) {\n      console.error(err);\n      alert(\"Checkout failed. Check console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"button\",\n    onClick: handleClick,\n    children: \"Buy Now\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_c = CheckoutButton;\nvar _c;\n$RefreshReg$(_c, \"CheckoutButton\");","map":{"version":3,"names":["React","loadStripe","jsxDEV","_jsxDEV","CheckoutButton","item","amount","size","quantity","seller","handleClick","response","fetch","method","headers","body","JSON","stringify","session","json","error","alert","stripe","publishableKey","redirectToCheckout","sessionId","id","err","console","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abrahambhatti/Desktop/SCUThreads/frontend/src/CheckoutButton.js"],"sourcesContent":["import React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nexport default function CheckoutButton({ item, amount, size, quantity, seller }) {\n  const handleClick = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/create-checkout-session\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ item, amount, size, quantity, seller }),\n      });\n      const session = await response.json();\n\n      if (session.error) {\n        alert(\"Error creating checkout session: \" + session.error);\n        return;\n      }\n\n      const stripe = await loadStripe(session.publishableKey);\n      await stripe.redirectToCheckout({ sessionId: session.id });\n    } catch (err) {\n      console.error(err);\n      alert(\"Checkout failed. Check console for details.\");\n    }\n  };\n\n  return <button className=\"button\" onClick={handleClick}>Buy Now</button>;\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,cAAcA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAC/E,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,IAAI;UAAEC,MAAM;UAAEC,IAAI;UAAEC,QAAQ;UAAEC;QAAO,CAAC;MAC/D,CAAC,CAAC;MACF,MAAMS,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAErC,IAAID,OAAO,CAACE,KAAK,EAAE;QACjBC,KAAK,CAAC,mCAAmC,GAAGH,OAAO,CAACE,KAAK,CAAC;QAC1D;MACF;MAEA,MAAME,MAAM,GAAG,MAAMrB,UAAU,CAACiB,OAAO,CAACK,cAAc,CAAC;MACvD,MAAMD,MAAM,CAACE,kBAAkB,CAAC;QAAEC,SAAS,EAAEP,OAAO,CAACQ;MAAG,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACR,KAAK,CAACO,GAAG,CAAC;MAClBN,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAED,oBAAOlB,OAAA;IAAQ0B,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAEpB,WAAY;IAAAqB,QAAA,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAC1E;AAACC,EAAA,GAxBuBhC,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}